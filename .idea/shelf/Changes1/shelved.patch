Index: v2/artemis.ahk
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/v2/artemis.ahk b/v2/artemis.ahk
new file mode 100644
--- /dev/null	(date 1675439401000)
+++ b/v2/artemis.ahk	(date 1675439401000)
@@ -0,0 +1,114 @@
+#SingleInstance Force
+;~ #NoTrayIcon
+SendMode Input
+SetWorkingDir "F:\"
+If not A_IsAdmin {
+	If A_IsCompiled
+		Run, *RunAs F:\artemis.exe
+	Else
+		Run, *RunAs autohotkey.exe "%A_ScriptFullPath%"
+}
+
+; constants
+words :=  "F:\bad_words.bb"
+key := "F:\key.sec"
+
+dontQuit := True
+aggressive := False
+debug := True
+
+msg := "Stop it! You love Liz, and you don't need this shit!"
+
+browsers := ["msedge.exe", "chrome.exe"]
+
+; main
+Loop, Read, %words%
+	Hotstring("::" . A_LoopReadLine, Func("Prevent"), "on")
+
+FileRead, pass, %key%
+If dontQuit
+	OnExit(Func("quit").Bind(pass), 1)
+
+If A_IsPaused
+	Pause, Off
+
+
+#If debug
+#1::exitapp
+#If
+
+
+
+; functions
+Prevent() {
+	msgbox % msg
+	If aggressiv
+		Shutdown, 4
+	return
+}
+
+add_word() {
+	InputBox, word, Add Word, Which word would you like to exclude?
+	If ErrorLevel
+		return
+	append_to_file(words, word)
+	return
+}
+
+quit(pass, ExitReason, ExitCode) {
+	If ExitReason in Shutdown,Logoff,Single,Reload,Exit
+		ExitApp
+	Else If ExitReason in Close,Menu
+	{
+		InputBox, pass0, Enter Password, What is the password?, HIDE, 250, 130
+		If ErrorLevel
+			reload()
+
+		If (pass0=pass)
+			ExitApp
+		else {
+			msgbox % pass0
+			msgbox % pass
+			reload()
+		}
+	}
+}
+
+reload() {
+	If A_IsCompiled
+		Run, F:\artemis.exe
+	Else
+		Run, autohotkey.exe "%A_ScriptFullPath%"
+}
+
+append_to_file(file_path, list_of_lines, line:=0){
+	;~ line = 0 is the last line
+	local file := []
+	local new_file, i
+	Loop, Read, %file_path%
+		file.push(A_LoopReadLine)
+	If line <= 0
+		line := line + file.Length() + 1
+
+	file.InsertAt(line, list_of_lines*)
+
+	new_file := FileOpen(file_path, "w")
+	For i, line in file
+		new_file.WriteLine(line)
+	new_file.close()
+	return
+}
+
+monitor_browser() {
+	If
+	return
+}
+
+Any(sentence*) {
+	local
+	for Each, statement in sentence {
+		if statement
+			return True
+	}
+	return False
+}
Index: swap.ahk(3).bak
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/swap.ahk(3).bak b/swap.ahk(3).bak
new file mode 100644
--- /dev/null	(date 1686298990743)
+++ b/swap.ahk(3).bak	(date 1686298990743)
@@ -0,0 +1,106 @@
+#NoEnv
+#Persistent
+SendMode, input
+SetWorkingDir %A_ScriptDir%
+#include functions.ahk
+#include paths.ahk
+
+dict := {"emily": "emily1", "dor": "dor1", "hodaya": "hodaya1", "tal neville": "talnev1"
+		,"tal rosenberg": "talros1", "sivan": "sivan1", "or kanarek": "ork1", "alice": "alice1"
+		,"deniz": "deniz1", "hadar gilboa": "hadar1", "dana csomo": "dana1"}
+
+names := ""
+for key, val in dict
+	names .= "|" . key
+names := SubStr(names, 2)
+Sort, names, D|
+
+actions := "Single|Specific"
+
+name := 5
+action := 1
+n := 1
+facename := "sivan"
+batchFile := "swap.bat"
+WorkingDir := "C:\Users\btavor\Downloads\Newfolder\SimSwap-main"
+
+;~ SetWorkingDir, %WorkingDir%
+
+#1::reload
+
+#XButton1::
+{
+	facename := facename . n
+	path := paths["downloads"] . "\New folder\SimSwap-main\pics\faces"
+	file := capture_img(path, facename)
+	n += 1
+	return
+}
+
+XButton2::
+{
+	path := paths["downloads"] . "\simswap - master\pics\faces"
+	capture_img(path, "spec.jpg")
+	return
+}
+
+XButton1::
+{
+	;~ If WinActive("ahk_exe chrome.exe") {
+		InputBox, times
+		Loop, %times% {
+			Send, +#{s}
+			WinWaitActive, SaveAs
+			Send, {Enter}
+			WinWaitActive, ahk_class Chrome_WidgetWin_1
+			WinGetTitle, title, % "ahk_id " . WinActive(ahk_class Chrome_WidgetWin_1)
+			Send, ^{w}
+			WinGetTitle, title0, A
+			While (title0=title) {
+				WinGetTitle, title0, A
+				sleep, 100
+			}
+		}
+	;~ }
+	;~ else if WinActive("ahk_exe explorer.exe") {
+		;~ path := paths.selected()
+		;~ ask()
+		;~ WinWaitClose, Choose Action
+
+		;~ name := IndexOf(names, namechoice, "|")
+		;~ action := IndexOf(actions, actchoice, "|")
+		;~ run_cmd("cd /d " . workingDir,, 2)
+		;~ run_cmd(batchFile, [dict[namechoice], path, actchoice], 2)
+	;~ }
+	return
+}
+
+
+ask() {
+	global name, action, names, actions
+	global NameChoice, ActChoice
+	Gui, Show , w180 h120, Choose Action
+
+	Gui, Add, Text, x10 y10 w250, Name:
+	Gui, Add, DropDownList, W90 vNameChoice, %names%
+	If name
+		GuiControl, Choose, NameChoice, |%name%
+
+	Gui, Add, Text, x10 y50 w90, Action:
+	Gui, Add, DropDownList, W80  vActChoice, %actions%
+	If name
+		GuiControl, Choose, ActChoice, |%action%
+
+	Gui, Add, Button, w60 default, OK
+	return
+
+	GuiClose:
+		gui, destroy
+		return
+	ButtonOK:
+		Gui, Submit
+		GuiControlGet, NameChoice
+		GuiControlGet, ActChoice
+		gui, destroy
+		return
+}
Index: swap.ahk(1).bak
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/swap.ahk(1).bak b/swap.ahk(1).bak
new file mode 100644
--- /dev/null	(date 1686298990742)
+++ b/swap.ahk(1).bak	(date 1686298990742)
@@ -0,0 +1,106 @@
+#NoEnv
+#Persistent
+SendMode, input
+SetWorkingDir %A_ScriptDir%
+#include functions.ahk
+#include paths.ahk
+
+dict := {"emily": "emily1", "dor": "dor1", "hodaya": "hodaya1", "tal neville": "talnev1"
+		,"tal rosenberg": "talros1", "sivan": "sivan1", "or kanarek": "ork1", "alice": "alice1"
+		,"deniz": "deniz1", "hadar gilboa": "hadar1", "dana csomo": "dana1"}
+
+names := ""
+for key, val in dict
+	names .= "|" . key
+names := SubStr(names, 2)
+Sort, names, D|
+
+actions := "Single|Specific"
+
+name := 5
+action := 1
+n := 1
+facename := "noa kirel"
+batchFile := "swap.bat"
+WorkingDir := "E:\OneDrive - Technion\Documents\My Documents\Thoughts\Artemis"
+
+;~ SetWorkingDir, %WorkingDir%
+
+#1::reload
+
+#XButton1::
+{
+	facename := facename . n
+	path := "E:\OneDrive - Technion\Documents\My Documents\Thoughts\Artemis\pics\faces"
+	file := capture_img(path, facename)
+	n += 1
+	return
+}
+
+XButton2::
+{
+	path := paths["downloads"] . "\simswap - master\pics\faces"
+	capture_img(path, "spec.jpg")
+	return
+}
+
+XButton1::
+{
+	;~ If WinActive("ahk_exe chrome.exe") {
+		InputBox, times
+		Loop, %times% {
+			Send, +#{s}
+			WinWaitActive, SaveAs
+			Send, {Enter}
+			WinWaitActive, ahk_class Chrome_WidgetWin_1
+			WinGetTitle, title, % "ahk_id " . WinActive(ahk_class Chrome_WidgetWin_1)
+			Send, ^{w}
+			WinGetTitle, title0, A
+			While (title0=title) {
+				WinGetTitle, title0, A
+				sleep, 100
+			}
+		}
+	;~ }
+	;~ else if WinActive("ahk_exe explorer.exe") {
+		;~ path := paths.selected()
+		;~ ask()
+		;~ WinWaitClose, Choose Action
+
+		;~ name := IndexOf(names, namechoice, "|")
+		;~ action := IndexOf(actions, actchoice, "|")
+		;~ run_cmd("cd /d " . workingDir,, 2)
+		;~ run_cmd(batchFile, [dict[namechoice], path, actchoice], 2)
+	;~ }
+	return
+}
+
+
+ask() {
+	global name, action, names, actions
+	global NameChoice, ActChoice
+	Gui, Show , w180 h120, Choose Action
+
+	Gui, Add, Text, x10 y10 w250, Name:
+	Gui, Add, DropDownList, W90 vNameChoice, %names%
+	If name
+		GuiControl, Choose, NameChoice, |%name%
+
+	Gui, Add, Text, x10 y50 w90, Action:
+	Gui, Add, DropDownList, W80  vActChoice, %actions%
+	If name
+		GuiControl, Choose, ActChoice, |%action%
+
+	Gui, Add, Button, w60 default, OK
+	return
+
+	GuiClose:
+		gui, destroy
+		return
+	ButtonOK:
+		Gui, Submit
+		GuiControlGet, NameChoice
+		GuiControlGet, ActChoice
+		gui, destroy
+		return
+}
Index: swap.ahk
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/swap.ahk b/swap.ahk
new file mode 100644
--- /dev/null	(date 1686298990742)
+++ b/swap.ahk	(date 1686298990742)
@@ -0,0 +1,106 @@
+#NoEnv
+#Persistent
+SendMode, input
+SetWorkingDir %A_ScriptDir%
+#include functions.ahk
+#include paths.ahk
+
+dict := {"emily": "emily1", "dor": "dor1", "hodaya": "hodaya1", "tal neville": "talnev1"
+		,"tal rosenberg": "talros1", "sivan": "sivan1", "or kanarek": "ork1", "alice": "alice1"
+		,"deniz": "deniz1", "hadar gilboa": "hadar1", "dana csomo": "dana1"}
+
+names := ""
+for key, val in dict
+	names .= "|" . key
+names := SubStr(names, 2)
+Sort, names, D|
+
+actions := "Single|Specific"
+
+name := 5
+action := 1
+n := 1
+facename := "noa kirel"
+batchFile := "swap.bat"
+WorkingDir := "E:\OneDrive - Technion\Documents\My Documents\Thoughts\Artemis"
+
+;~ SetWorkingDir, %WorkingDir%
+
+#1::reload
+
+#XButton1::
+{
+	;~ facename := facename . n
+	path := "E:\OneDrive - Technion\Documents\My Documents\Thoughts\Artemis\pics\faces\" . facename
+	file := capture_img(path, n)
+	n += 1
+	return
+}
+
+XButton2::
+{
+	path := paths["downloads"] . "\simswap - master\pics\faces"
+	capture_img(path, "spec.jpg")
+	return
+}
+
+XButton1::
+{
+	;~ If WinActive("ahk_exe chrome.exe") {
+		InputBox, times
+		Loop, %times% {
+			Send, +#{s}
+			WinWaitActive, SaveAs
+			Send, {Enter}
+			WinWaitActive, ahk_class Chrome_WidgetWin_1
+			WinGetTitle, title, % "ahk_id " . WinActive(ahk_class Chrome_WidgetWin_1)
+			Send, ^{w}
+			WinGetTitle, title0, A
+			While (title0=title) {
+				WinGetTitle, title0, A
+				sleep, 100
+			}
+		}
+	;~ }
+	;~ else if WinActive("ahk_exe explorer.exe") {
+		;~ path := paths.selected()
+		;~ ask()
+		;~ WinWaitClose, Choose Action
+
+		;~ name := IndexOf(names, namechoice, "|")
+		;~ action := IndexOf(actions, actchoice, "|")
+		;~ run_cmd("cd /d " . workingDir,, 2)
+		;~ run_cmd(batchFile, [dict[namechoice], path, actchoice], 2)
+	;~ }
+	return
+}
+
+
+ask() {
+	global name, action, names, actions
+	global NameChoice, ActChoice
+	Gui, Show , w180 h120, Choose Action
+
+	Gui, Add, Text, x10 y10 w250, Name:
+	Gui, Add, DropDownList, W90 vNameChoice, %names%
+	If name
+		GuiControl, Choose, NameChoice, |%name%
+
+	Gui, Add, Text, x10 y50 w90, Action:
+	Gui, Add, DropDownList, W80  vActChoice, %actions%
+	If name
+		GuiControl, Choose, ActChoice, |%action%
+
+	Gui, Add, Button, w60 default, OK
+	return
+
+	GuiClose:
+		gui, destroy
+		return
+	ButtonOK:
+		Gui, Submit
+		GuiControlGet, NameChoice
+		GuiControlGet, ActChoice
+		gui, destroy
+		return
+}
Index: swap.ahk.bak
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/swap.ahk.bak b/swap.ahk.bak
new file mode 100644
--- /dev/null	(date 1686298990744)
+++ b/swap.ahk.bak	(date 1686298990744)
@@ -0,0 +1,106 @@
+#NoEnv
+#Persistent
+SendMode, input
+SetWorkingDir %A_ScriptDir%
+#include functions.ahk
+#include paths.ahk
+
+dict := {"emily": "emily1", "dor": "dor1", "hodaya": "hodaya1", "tal neville": "talnev1"
+		,"tal rosenberg": "talros1", "sivan": "sivan1", "or kanarek": "ork1", "alice": "alice1"
+		,"deniz": "deniz1", "hadar gilboa": "hadar1", "dana csomo": "dana1"}
+
+names := ""
+for key, val in dict
+	names .= "|" . key
+names := SubStr(names, 2)
+Sort, names, D|
+
+actions := "Single|Specific"
+
+name := 5
+action := 1
+n := 1
+facename := "noa kirel"
+batchFile := "swap.bat"
+WorkingDir := "E:\OneDrive - Technion\Documents\My Documents\Thoughts\Artemis"
+
+;~ SetWorkingDir, %WorkingDir%
+
+#1::reload
+
+#XButton1::
+{
+	facename := facename . n
+	path := paths["downloads"] . "\New folder\SimSwap-main\pics\faces"
+	file := capture_img(path, facename)
+	n += 1
+	return
+}
+
+XButton2::
+{
+	path := paths["downloads"] . "\simswap - master\pics\faces"
+	capture_img(path, "spec.jpg")
+	return
+}
+
+XButton1::
+{
+	;~ If WinActive("ahk_exe chrome.exe") {
+		InputBox, times
+		Loop, %times% {
+			Send, +#{s}
+			WinWaitActive, SaveAs
+			Send, {Enter}
+			WinWaitActive, ahk_class Chrome_WidgetWin_1
+			WinGetTitle, title, % "ahk_id " . WinActive(ahk_class Chrome_WidgetWin_1)
+			Send, ^{w}
+			WinGetTitle, title0, A
+			While (title0=title) {
+				WinGetTitle, title0, A
+				sleep, 100
+			}
+		}
+	;~ }
+	;~ else if WinActive("ahk_exe explorer.exe") {
+		;~ path := paths.selected()
+		;~ ask()
+		;~ WinWaitClose, Choose Action
+
+		;~ name := IndexOf(names, namechoice, "|")
+		;~ action := IndexOf(actions, actchoice, "|")
+		;~ run_cmd("cd /d " . workingDir,, 2)
+		;~ run_cmd(batchFile, [dict[namechoice], path, actchoice], 2)
+	;~ }
+	return
+}
+
+
+ask() {
+	global name, action, names, actions
+	global NameChoice, ActChoice
+	Gui, Show , w180 h120, Choose Action
+
+	Gui, Add, Text, x10 y10 w250, Name:
+	Gui, Add, DropDownList, W90 vNameChoice, %names%
+	If name
+		GuiControl, Choose, NameChoice, |%name%
+
+	Gui, Add, Text, x10 y50 w90, Action:
+	Gui, Add, DropDownList, W80  vActChoice, %actions%
+	If name
+		GuiControl, Choose, ActChoice, |%action%
+
+	Gui, Add, Button, w60 default, OK
+	return
+
+	GuiClose:
+		gui, destroy
+		return
+	ButtonOK:
+		Gui, Submit
+		GuiControlGet, NameChoice
+		GuiControlGet, ActChoice
+		gui, destroy
+		return
+}
Index: artemis.ahk.bak
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/artemis.ahk.bak b/artemis.ahk.bak
new file mode 100644
--- /dev/null	(date 1675345258000)
+++ b/artemis.ahk.bak	(date 1675345258000)
@@ -0,0 +1,27 @@
+#NoEnv
+SendMode Input
+SetWorkingDir %A_ScriptDir%
+#Include paths.ahk
+#Include utils.ahk
+
+words := paths["memory"] . "\bad_words.bb"
+
+Loop, Read, %words%
+	Hotstring(":*:" . A_LoopReadLine, Func("abort"), "on")
+
+OnExit(Func("reload"))
+
+abort() {
+	msgbox, You love Liz. Stop it.
+	;~ Shutdown, 4
+	return
+}
+
+add_word(word) {
+	append_to_file(words, word)
+	return
+}
+
+reload() {
+	Run, autohotkey.exe "%A_ScriptFullPath%"
+}
Index: swap.ahk(2).bak
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/swap.ahk(2).bak b/swap.ahk(2).bak
new file mode 100644
--- /dev/null	(date 1686298990742)
+++ b/swap.ahk(2).bak	(date 1686298990742)
@@ -0,0 +1,106 @@
+#NoEnv
+#Persistent
+SendMode, input
+SetWorkingDir %A_ScriptDir%
+#include functions.ahk
+#include paths.ahk
+
+dict := {"emily": "emily1", "dor": "dor1", "hodaya": "hodaya1", "tal neville": "talnev1"
+		,"tal rosenberg": "talros1", "sivan": "sivan1", "or kanarek": "ork1", "alice": "alice1"
+		,"deniz": "deniz1", "hadar gilboa": "hadar1", "dana csomo": "dana1"}
+
+names := ""
+for key, val in dict
+	names .= "|" . key
+names := SubStr(names, 2)
+Sort, names, D|
+
+actions := "Single|Specific"
+
+name := 5
+action := 1
+n := 1
+facename := "sivan"
+batchFile := "swap.bat"
+WorkingDir := "C:\Users\btavor\Downloads\Newfolder\SimSwap-main"
+
+;~ SetWorkingDir, %WorkingDir%
+
+#1::reload
+
+#XButton1::
+{
+	facename := facename . n
+	path := paths["downloads"] . "\New folder\SimSwap-main\pics\faces"
+	file := capture_img(path, facename)
+	n += 1
+	return
+}
+
+XButton2::
+{
+	path := paths["downloads"] . "\simswap - master\pics\faces"
+	capture_img(path, "spec.jpg")
+	return
+}
+
+XButton1::
+{
+	If WinActive("ahk_exe chrome.exe") {
+		InputBox, times
+		Loop, %times% {
+			Send, +#{s}
+			WinWaitActive, SaveAs
+			Send, {Enter}
+			WinWaitActive, ahk_class Chrome_WidgetWin_1
+			WinGetTitle, title, % "ahk_id " . WinActive(ahk_class Chrome_WidgetWin_1)
+			Send, ^{w}
+			WinGetTitle, title0, A
+			While (title0=title) {
+				WinGetTitle, title0, A
+				sleep, 100
+			}
+		}
+	}
+	else if WinActive("ahk_exe explorer.exe") {
+		path := paths.selected()
+		ask()
+		WinWaitClose, Choose Action
+
+		name := IndexOf(names, namechoice, "|")
+		action := IndexOf(actions, actchoice, "|")
+		run_cmd("cd /d " . workingDir,, 2)
+		run_cmd(batchFile, [dict[namechoice], path, actchoice], 2)
+	}
+	return
+}
+
+
+ask() {
+	global name, action, names, actions
+	global NameChoice, ActChoice
+	Gui, Show , w180 h120, Choose Action
+
+	Gui, Add, Text, x10 y10 w250, Name:
+	Gui, Add, DropDownList, W90 vNameChoice, %names%
+	If name
+		GuiControl, Choose, NameChoice, |%name%
+
+	Gui, Add, Text, x10 y50 w90, Action:
+	Gui, Add, DropDownList, W80  vActChoice, %actions%
+	If name
+		GuiControl, Choose, ActChoice, |%action%
+
+	Gui, Add, Button, w60 default, OK
+	return
+
+	GuiClose:
+		gui, destroy
+		return
+	ButtonOK:
+		Gui, Submit
+		GuiControlGet, NameChoice
+		GuiControlGet, ActChoice
+		gui, destroy
+		return
+}
Index: swap.ahk(4).bak
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/swap.ahk(4).bak b/swap.ahk(4).bak
new file mode 100644
--- /dev/null	(date 1686298990743)
+++ b/swap.ahk(4).bak	(date 1686298990743)
@@ -0,0 +1,107 @@
+#NoEnv
+#Persistent
+SendMode, input
+SetWorkingDir %A_ScriptDir%
+#include functions.ahk
+#include paths.ahk
+
+dict := {"emily": "emily1", "dor": "dor1", "hodaya": "hodaya1", "tal neville": "talnev1"
+		,"tal rosenberg": "talros1", "sivan": "sivan1", "or kanarek": "ork1", "alice": "alice1"
+		,"deniz": "deniz1", "hadar gilboa": "hadar1", "dana csomo": "dana1"}
+
+names := ""
+for key, val in dict
+	names .= "|" . key
+names := SubStr(names, 2)
+Sort, names, D|
+
+actions := "Single|Specific"
+
+name := 5
+action := 1
+n := 1
+facename := "sivan"
+batchFile := {"Single": "swap.bat"
+			  ,"Specific": "swapspec.bat"}
+WorkingDir := "C:\Users\btavor\Downloads\Newfolder\SimSwap-main"
+
+;~ SetWorkingDir, %WorkingDir%
+
+#1::reload
+
+#XButton1::
+{
+	facename := facename . n
+	path := paths["downloads"] . "\New folder\SimSwap-main\pics\faces"
+	file := capture_img(path, facename)
+	n += 1
+	return
+}
+
+XButton2::
+{
+	path := paths["downloads"] . "\simswap - master\pics\faces"
+	capture_img(path, "spec.jpg")
+	return
+}
+
+XButton1::
+{
+	If WinActive("ahk_exe chrome.exe") {
+		InputBox, times
+		Loop, %times% {
+			Send, +#{s}
+			WinWaitActive, SaveAs
+			Send, {Enter}
+			WinWaitActive, ahk_class Chrome_WidgetWin_1
+			WinGetTitle, title, % "ahk_id " . WinActive(ahk_class Chrome_WidgetWin_1)
+			Send, ^{w}
+			WinGetTitle, title0, A
+			While (title0=title) {
+				WinGetTitle, title0, A
+				sleep, 100
+			}
+		}
+	}
+	else if WinActive("ahk_exe explorer.exe") {
+		path := paths.selected()
+		ask()
+		WinWaitClose, Choose Action
+
+		name := IndexOf(names, namechoice, "|")
+		action := IndexOf(actions, actchoice, "|")
+		run_cmd("cd /d " . workingDir,, 2)
+		;~ run_cmd(batchFile["Single"], [dict[namechoice], path, actchoice], 2,, workingDir)
+	}
+	return
+}
+
+
+ask() {
+	global name, action, names, actions
+	global NameChoice, ActChoice
+	Gui, Show , w180 h120, Choose Action
+
+	Gui, Add, Text, x10 y10 w250, Name:
+	Gui, Add, DropDownList, W90 vNameChoice, %names%
+	If name
+		GuiControl, Choose, NameChoice, |%name%
+
+	Gui, Add, Text, x10 y50 w90, Action:
+	Gui, Add, DropDownList, W80  vActChoice, %actions%
+	If name
+		GuiControl, Choose, ActChoice, |%action%
+
+	Gui, Add, Button, w60 default, OK
+	return
+
+	GuiClose:
+		gui, destroy
+		return
+	ButtonOK:
+		Gui, Submit
+		GuiControlGet, NameChoice
+		GuiControlGet, ActChoice
+		gui, destroy
+		return
+}
Index: artemis.ahk
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/artemis.ahk b/artemis.ahk
new file mode 100644
--- /dev/null	(date 1675439401000)
+++ b/artemis.ahk	(date 1675439401000)
@@ -0,0 +1,114 @@
+#SingleInstance Force
+;~ #NoTrayIcon
+SendMode Input
+SetWorkingDir "F:\"
+If not A_IsAdmin {
+	If A_IsCompiled
+		Run, *RunAs F:\artemis.exe
+	Else
+		Run, *RunAs autohotkey.exe "%A_ScriptFullPath%"
+}
+
+; constants
+words :=  "F:\bad_words.bb"
+key := "F:\key.sec"
+
+dontQuit := True
+aggressive := False
+debug := True
+
+msg := "Stop it! You love Liz, and you don't need this shit!"
+
+browsers := ["msedge.exe", "chrome.exe"]
+
+; main
+Loop, Read, %words%
+	Hotstring("::" . A_LoopReadLine, Func("Prevent"), "on")
+
+FileRead, pass, %key%
+If dontQuit
+	OnExit(Func("quit").Bind(pass), 1)
+
+If A_IsPaused
+	Pause, Off
+
+
+#If debug
+#1::exitapp
+#If
+
+
+
+; functions
+Prevent() {
+	msgbox % msg
+	If aggressiv
+		Shutdown, 4
+	return
+}
+
+add_word() {
+	InputBox, word, Add Word, Which word would you like to exclude?
+	If ErrorLevel
+		return
+	append_to_file(words, word)
+	return
+}
+
+quit(pass, ExitReason, ExitCode) {
+	If ExitReason in Shutdown,Logoff,Single,Reload,Exit
+		ExitApp
+	Else If ExitReason in Close,Menu
+	{
+		InputBox, pass0, Enter Password, What is the password?, HIDE, 250, 130
+		If ErrorLevel
+			reload()
+
+		If (pass0=pass)
+			ExitApp
+		else {
+			msgbox % pass0
+			msgbox % pass
+			reload()
+		}
+	}
+}
+
+reload() {
+	If A_IsCompiled
+		Run, F:\artemis.exe
+	Else
+		Run, autohotkey.exe "%A_ScriptFullPath%"
+}
+
+append_to_file(file_path, list_of_lines, line:=0){
+	;~ line = 0 is the last line
+	local file := []
+	local new_file, i
+	Loop, Read, %file_path%
+		file.push(A_LoopReadLine)
+	If line <= 0
+		line := line + file.Length() + 1
+
+	file.InsertAt(line, list_of_lines*)
+
+	new_file := FileOpen(file_path, "w")
+	For i, line in file
+		new_file.WriteLine(line)
+	new_file.close()
+	return
+}
+
+monitor_browser() {
+	If
+	return
+}
+
+Any(sentence*) {
+	local
+	for Each, statement in sentence {
+		if statement
+			return True
+	}
+	return False
+}
Index: v2/artemis.ahk.bak
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/v2/artemis.ahk.bak b/v2/artemis.ahk.bak
new file mode 100644
--- /dev/null	(date 1675345258000)
+++ b/v2/artemis.ahk.bak	(date 1675345258000)
@@ -0,0 +1,27 @@
+#NoEnv
+SendMode Input
+SetWorkingDir %A_ScriptDir%
+#Include paths.ahk
+#Include utils.ahk
+
+words := paths["memory"] . "\bad_words.bb"
+
+Loop, Read, %words%
+	Hotstring(":*:" . A_LoopReadLine, Func("abort"), "on")
+
+OnExit(Func("reload"))
+
+abort() {
+	msgbox, You love Liz. Stop it.
+	;~ Shutdown, 4
+	return
+}
+
+add_word(word) {
+	append_to_file(words, word)
+	return
+}
+
+reload() {
+	Run, autohotkey.exe "%A_ScriptFullPath%"
+}
